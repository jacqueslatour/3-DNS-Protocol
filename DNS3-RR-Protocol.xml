<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE rfc SYSTEM 'rfc2629.dtd' []>
<rfc ipr="trust200902" category="std" docName="draft-ietf-regext-dnsoperator-to-rrr-protocol-01ac.txt">
<?rfc toc="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc private=""?>
<?rfc topblock="yes"?>
<?rfc comments="no"?>
<front>
<title abbrev="3-DNS-RRR">Third Party DNS operator to Registrars/Registries Protocol</title>

<author initials="J." surname="Latour" fullname="Jacques Latour">
<organization>CIRA</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>jacques.latour@cira.ca</email>
<uri></uri>
</address>
</author>
<author initials="O." surname="Gudmundsson" fullname="Olafur Gudmundsson">
<organization>Cloudflare, Inc.</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>olafur+ietf@cloudflare.com</email>
<uri></uri>
</address>
</author>
<author initials="P." surname="Wouters" fullname="Paul Wouters">
<organization>Red Hat</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>paul@nohats.ca</email>
<uri></uri>
</address>
</author>
<author initials="M." surname="Pounsett" fullname="Matthew Pounsett">
<organization>Rightside Group, Ltd.</organization>
<address>
<postal>
<street></street>
<city></city>
<code></code>
<country></country>
<region></region>
</postal>
<phone></phone>
<email>matt@conundrum.com</email>
<uri></uri>
</address>
</author>
<date year="2016" month="July" day="7"/>

<area>Applications</area>
<workgroup>regext</workgroup>
<keyword>dnssec</keyword>
<keyword>delegation maintenance</keyword>
<keyword>trust anchors</keyword>


<abstract>
<t>There are several problems that arise in the standard
Registrant/Registrar/Registry model when the operator of a zone is neither the
Registrant nor the Registrar for the delegation. Historically the issues have
been minor, and limited to difficulty guiding the Registrant through the
initial changes to the NS records for the delegation. As this is usually a
one time activity when the operator first takes charge of the zone it has not
been treated as a serious issue.
</t>
<t>When the domain on the other hand uses DNSSEC it necessary to make regular
(sometimes annual) changes to the delegation, in order to track KSK rollover,
by updating the delegation's DS record(s).
Under the current model this is prone to delays and errors. Even when the Registrant has
outsourced the operation of DNS to a third party the registrant still has to
be in the loop to update the DS record.
</t>
<t>There is a need for a simple protocol that allows a third party DNS operator
to update DS and NS records in a trusted manner for a delegation without
involving the registrant for each operation. This same protocol can be used by
Registrants.
</t>
<t>The protocol described in this draft is REST based, and when used through an
authenticated channel can be used to establish the DNSSEC Initial Trust (to
turn on DNSSEC or bootstrap DNSSEC). Once DNSSEC trust is established this
channel can be used to trigger maintenance of delegation records such as DS,
NS, and glue records. The protocol is kept as simple as possible.
</t>
</abstract>

</front>

<middle>

<section anchor="introduction" title="Introduction">
<t>Why is this needed?  DNS registration systems today are designed around making
registrations easy and fast. After the domain has been registered there
are really three options on who maintains the DNS zone that is loaded on the
&quot;primary&quot; DNS servers for the domain this can be the Registrant, Registrar, or
a third party DNS Operator.
</t>
<t>Unfortunately the ease to make changes differs for each one of these options.
The Registrant needs to use the interface that the registrar provides to
update NS and DS records. The Registrar on the other hand can make changes
directly into the registration system. The third party DNS Operator on the
hand needs to go through the Registrant to update any delegation information.
</t>
<t>Current system does not work well, there are many types of failures have been
reported and they have been at all levels in the registration model.
</t>
<t>The failures result either inability to use DNSSEC or in validation failures
that case the domain to become invalid and all users that are behind
validating resolvers will not be able to to access the domain.
</t>
<t>The goal of this document is to create an automated interface that will reduce the
friction that current exists in maintaining DNSSEC delegations.
</t>
</section>

<section anchor="notional-conventions" title="Notional Conventions">

<section anchor="definitions" title="Definitions">
<t>For the purposes of this draft, a third-party DNS Operator is any DNS Operator
responsible for a zone where the operator is neither the Registrant nor the
Registrar of record for the delegation.
</t>
<t>Uses of the word 'Registrar' in this document may also be applied to
resellers: an entity that sells delegations through a registrar with whom the
entity has a reseller agreement.
</t>
</section>

<section anchor="rfc2119-keywords" title="RFC2119 Keywords">
<t>The key words &quot;MUST&quot;, &quot;MUST NOT&quot;, &quot;REQUIRED&quot;, &quot;SHALL&quot;, &quot;SHALL NOT&quot;, &quot;SHOULD&quot;,
&quot;SHOULD NOT&quot;, &quot;RECOMMENDED&quot;, &quot;MAY&quot;, and &quot;OPTIONAL&quot; in this document are to be
interpreted as described in <xref target="RFC2119"/>.
</t>
</section>
</section>

<section anchor="what-is-the-goal" title="What is the goal?">
<t>The primary goal is to have a protocol to establish a secure chain of trust
outside the traditional RRR EPP model.
</t>
<t>In the general case there should be a way to find the right Registrar/Registry
entity to talk to but that does not exist. Whois[] is the natural protocol to
carry such information but that protocol is unreliable and hard to parse. Its
proposed successor RDAP <xref target="RFC7480"/> has yet be deployed on most TLD's.
</t>
<t>The preferred communication mechanism is to use is to use a REST <xref target="RFC6690"/>
call to start processing of the requested delegation information.
</t>

<section anchor="why-dnssec" title="Why DNSSEC?">
<t>DNSSEC <xref target="RFC4035"/> provides data authentication for DNS answers, having DNSSEC
enabled makes it possible to trust the answers. The biggest obstacle in adoption is
deploying DNSSEC is the initial configuration of the DNSSEC domain trust
anchor in the parent, DS record.
</t>
</section>

<section anchor="how-does-a-child-signal-its-parent-it-wants-dnssec-trust-anchor" title="How does a child signal its parent it wants DNSSEC Trust Anchor?">
<t>The child needs first to sign the domain, then the child can &quot;upload&quot; the DS record to
its parent. The &quot;normal&quot; way to upload is to go through registration
interface, but that fails frequently. The DNS Operator may not have access to
the interface thus the registrant needs to relay the information. For large
operations this does not scale, as evident in lack of Trust Anchors for signed
deployments that are operated by third parties.
</t>
<t>The child can signal its desire to have DNSSEC validation enabled by
publishing one of the special DNS records CDS and/or CDNSKEY<xref target="RFC7344"/> and
its proposed extension <xref target="I-D.ietf-dnsop-maintain-ds"/>.
</t>
<t>Once the &quot;parent&quot; &quot;sees&quot; these records it SHOULD start acceptance processing.
This document will cover below how to make the CDS records visible to the
right parental agent.
</t>
<t>We and <xref target="I-D.ogud-dnsop-maintain-ds"/> argue that the publication of
CDS/CDNSKEY record is sufficient for the parent to start the acceptance
processing. The main point is to provide authentication thus if the child is
in &quot;good&quot; state then the DS upload should be simple to accept and publish. If
there is a problem the parent has ability to not add the DS.
</t>
<t>In the event this protocols and its associated authentication mechanism does not
address the Registrant's security requirements to create a secure Trust Anchor
delegation then the Registrant always has recourse by submitting its DS record via
its Registrar interface with EPP submission to the Registry.
</t>
</section>

<section anchor="what-checks-are-needed-by-parent" title="What checks are needed by parent?">
<t>The parent upon receiving a signal that it check the child for desire for DS
record publication. The basic tests include,
</t>

<figure align="center"><artwork align="center">
1. The zone is signed
2. The zone has a CDS signed by a KSK referenced in the current DS,
   referring to a at least one key in the current DNSKEY RRset
3. All the name-servers for the zone agree on the CDS RRset contents
</artwork></figure>
<t>Parents can have additional tests, defined delays, queries over TCP, ensure zone
delegation best practice as per <xref target="I-D.wallstrom-dnsop-dns-delegation-requirements"/> and even
ask the DNS Operator to prove they can add data to the zone, or provide a code
that is tied to the affected zone. The protocol is partially-synchronous,
i.e. the server can elect to hold connection open until the operation has
concluded or it can return that it received the request. It is up to the child
to monitor the parent for completion of the operation and issue possible
follow-up calls.
</t>
</section>
</section>

<section anchor="third-party-dns-operator-to-registrarsregistries-restful-api" title="Third Party DNS operator to Registrars/Registries RESTful API">
<t>The specification of this API is minimalist, but a realistic one.
</t>
<t>Registry Lock mechanisms that prevents domain hijacking block domains prevent certain
attributes in the registry to be changed.  This API may be denied access to change
the DS records for domains that are Registry Locked (HTTP Status code 401).
</t>

<section anchor="authentication" title="Authentication">
<t>The API does not impose any unique server authentication requirements. The
server authentication provided by TLS fully addresses the needs. In general,
for the API SHOULD be provided over TLS-protected transport (e.g., HTTPS) or
VPN.
</t>
</section>

<section anchor="authorization" title="Authorization">
<t>Authorization is out of scope of this document. The CDS records present in the
zone file are indications of intention to sign/unsign/update the DS records of
the domain in the parent zone. This means the proceeding of the action is not
determined by who issued the request. Therefore, authorization is out of the
scope. Registries and registrars who plan to provide this service can,
however, implement their own policy such as IP white listing, API key, etc.
</t>
</section>

<section anchor="base-url-locator" title="Base URL Locator">
<t>The base URL for registries or registrars who want to provide this service to
DNS Operators can be made auto-discoverable as an RDAP extension.
</t>
</section>

<section anchor="cds-resource" title="CDS resource">
<t>Path: /domains/{domain}/cds
{domain}: is the domain name to be operated on
</t>

<section anchor="initial-trust-establishment-enable-dnssec-validation" title="Initial Trust Establishment (Enable DNSSEC validation)">

<section anchor="request" title="Request">
<t>Syntax: POST /domains/{domain}/cds
</t>
<t>A DS record based on the CDS record in the child zone file will be inserted
into the registry and the parent zone file upon the successful completion of
such request. If there are multiple CDS records in the CDS RRset, multiple DS
records will be added.
</t>
<t>Either the CDS/CDNSKEY or the DNSKEY can be used to create the DS record.
Note: entity expecting CDNSKEY is still expected accept the /cds command.
</t>
</section>

<section anchor="response" title="Response">
<t>
<list style="symbols">
<t>HTTP Status code 201 indicates a success.</t>
<t>HTTP Status code 400 indicates a failure due to validation.</t>
<t>HTTP Status code 401 indicates an unauthorized resource access.</t>
<t>HTTP Status code 403 indicates a failure due to an invalid challenge token.</t>
<t>HTTP Status code 404 indicates the domain does not exist.</t>
<t>HTTP Status code 500 indicates a failure due to unforeseeable reasons.</t>
</list>
</t>
</section>
</section>

<section anchor="removing-a-ds-turn-off-dnssec" title="Removing a DS (turn off DNSSEC)">

<section anchor="request-1" title="Request">

<figure align="center"><artwork align="center">
Syntax: DELETE /domains/{domain}/cds
</artwork></figure>
<t>A null CDS or CDNSKEY record mean the entire DS RRset must be removed.
</t>
</section>

<section anchor="response-1" title="Response">
<t>
<list style="symbols">
<t>HTTP Status code 200 indicates a success.</t>
<t>HTTP Status code 400 indicates a failure due to validation.</t>
<t>HTTP Status code 401 indicates an unauthorized resource access.</t>
<t>HTTP Status code 404 indicates the domain does not exist.</t>
<t>HTTP Status code 500 indicates a failure due to unforeseeable reasons.</t>
</list>
</t>
</section>
</section>

<section anchor="ds-maintenance-key-roll-over" title="DS Maintenance (Key roll over)">

<section anchor="request-2" title="Request">

<figure align="center"><artwork align="center">
Syntax: PUT /domains/{domain}/cds
</artwork></figure>
<t>Maintenance activities are performed based on the CDS available in the child zone.
DS records may be added, removed. But the entire DS RRset must not be deleted.
</t>
</section>

<section anchor="response-2" title="Response">
<t>
<list style="symbols">
<t>HTTP Status code 200 indicates a success.</t>
<t>HTTP Status code 400 indicates a failure due to validation.</t>
<t>HTTP Status code 401 indicates an unauthorized resource access.</t>
<t>HTTP Status code 404 indicates the domain does not exist.</t>
<t>HTTP Status code 500 indicates a failure due to unforeseeable reasons.</t>
</list>
</t>
</section>
</section>
</section>

<section anchor="tokens-resource" title="Tokens resource">
<t>Path: /domains/{domain}/tokens
   {domain}: is the domain name to be operated on
</t>

<section anchor="setup-initial-trust-establishment-with-challenge" title="Setup Initial Trust Establishment with Challenge">

<section anchor="request-3" title="Request">

<figure align="center"><artwork align="center">
Syntax: POST /domains/{domain}/tokens
</artwork></figure>
<t>A random token to be included as a _delegate TXT record prior establishing the
DNSSEC initial trust.
</t>
</section>

<section anchor="response-3" title="Response">
<t>
<list style="symbols">
<t>HTTP Status code 200 indicates a success.  Token included in the body of the response,
 as a valid TXT record</t>
<t>HTTP Status code 404 indicates the domain does not exist.</t>
<t>HTTP Status code 500 indicates a failure due to unforeseeable reasons.</t>
</list>
</t>
</section>
</section>
</section>

<section anchor="customized-error-messages" title="Customized Error Messages">
<t>Service providers can provide a customized error message in the response body
in addition to the HTTP status code defined in the previous section.
</t>
<t>This can include an Identifying number/string that can be used to track the
requests.
</t>
<t>#Using the definitions
This section at the moment contains comments from early implementers
</t>
</section>

<section anchor="how-to-react-to-403-on-post-cds" title="How to react to 403 on POST cds">
<t>The basic reaction to a 403 on POST /domains/{domain}/cds is to issue POST /domains/{domain}/tokens
command to fetch the challenge to insert into the zone.
</t>
</section>
</section>

<section anchor="security-considerations" title="Security considerations">
<t>Supplying the DS record as proof of control is not realistic since the domain is
already publicly signed and the CDS/DS is readily available.
</t>
<t>Open question:??
JL?: It is not recommended the protocol be used with high profile domains such as TLDs and governments
that are DNS operators. This protocol is meant to allow third party DNS operator to submit the
initial DS in a trusted manner without involving the registrant.
</t>
<t>This protocol should increase the adoption of DNSSEC and get more zones to become
validated thus overall the security gain outweighs the possible drawbacks.
</t>
<t>TBD This will hopefully get more zones to become validated thus overall the
security gain out weights the possible drawbacks.
</t>
<t>risk of takeover ?
risk of validation errors &lt; declines
transfer issues
</t>
</section>

<section anchor="iana-actions" title="IANA Actions">
<t>URI ??? TBD
</t>
</section>

<section anchor="internationalization-considerations" title="Internationalization Considerations">
<t>This protocol is designed for machine to machine communications
</t>
</section>

</middle>
<back>
<references title="Normative References">
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ietf-dnsop-maintain-ds-03.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-wallstrom-dnsop-dns-delegation-requirements-00.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4035.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7344.xml"?>
</references>
<references title="Informative References">
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-ogud-dnsop-maintain-ds-00.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6690.xml"?>
<?rfc include="http://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.7480.xml"?>
</references>

<section anchor="document-history" title="Document History">

<section anchor="regex-versio-01" title="Regex versio 01">
<t>Rewrote Abstract and Into (MP)
Introduced code 401 when changes are not allowed
Text edits and clarifications.
</t>
</section>

<section anchor="regex-version-00" title="Regex version 00">
<t>Working group document same as 03, just track changed to standard
</t>
</section>

<section anchor="version-03" title="Version 03">
<t>Clarified based on comments and questions from early implementors
</t>
</section>

<section anchor="version-02" title="Version 02">
<t>Reflected comments on mailing lists
</t>
</section>

<section anchor="version-01" title="Version 01">
<t>This version adds a full REST definition this is based on suggestions from
Jakob Schlyter.
</t>
</section>

<section anchor="version-00" title="Version 00">
<t>First rough version
</t>
</section>
</section>

</back>
</rfc>
